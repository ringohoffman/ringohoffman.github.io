<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Blogu</title><link>https://ringohoffman.github.io/</link><description>A place to document my learnings</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>ringohoffman@me.com (Matthew Hoffman)</managingEditor><webMaster>ringohoffman@me.com (Matthew Hoffman)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 17 Aug 2023 19:00:00 -0800</lastBuildDate><atom:link href="https://ringohoffman.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Python: A Strongly, Dynamically, Duck Typed, Interpreted Language</title><link>https://ringohoffman.github.io/01-python-a-strongly-dynamically-duck-typed-interpreted-language/</link><pubDate>Thu, 17 Aug 2023 19:00:00 -0800</pubDate><author><name>Matthew Hoffman</name></author><guid>https://ringohoffman.github.io/01-python-a-strongly-dynamically-duck-typed-interpreted-language/</guid><description>Background and MotivationI recently had a conversation with a few of my coworkers where I had mentioned that Python is a strongly typed language. One of them didn&amp;rsquo;t think that it was, and another explained that strong typing means that every object has a type, which is true about Python but is not the definition of strong typing. It surprised me to realize that even though my coworkers and I are experienced Python developers, none of us had a clear understanding of strong typing.</description></item></channel></rss>